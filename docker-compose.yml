name: "electric_quickstart"
# version: '3.8'

services:
  # shell:
  #   build: ./shell
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     PORT: 3000
  #     APP_NAME: shell 
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  # index:
  #   build: ./index
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     PORT: 3001
  #     APP_NAME: index 
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  # app-two:
  #   build: ./react-app
  #   ports:
  #     - "3002:3000"
  #   environment:
  #     PORT: 3002
  #     APP_NAME: react-app
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 

  postgres:
    image: docker.io/postgres:16-alpine
    environment: 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "54321:5432"
    volumes:          
      - pgdata:/var/lib/postgresql/data
    # tmpfs:
    #   - /var/lib/postgresql/data
    #   - /tmp
    command:
      - -c
      - listen_addresses=*
      - -c
      - wal_level=logical
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  electric:
    image: docker.io/electricsql/electric:latest
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
      # Not suitable for production https://electric-sql.com/docs/guides/security
      ELECTRIC_INSECURE: true
      ELECTRIC_STORAGE_DIR: /var/lib/electric/persistent
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

volumes:                         
  pgdata: